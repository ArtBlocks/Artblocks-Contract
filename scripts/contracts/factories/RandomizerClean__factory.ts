/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { RandomizerClean } from "../RandomizerClean";

export class RandomizerClean__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RandomizerClean> {
    return super.deploy(overrides || {}) as Promise<RandomizerClean>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RandomizerClean {
    return super.attach(address) as RandomizerClean;
  }
  connect(signer: Signer): RandomizerClean__factory {
    return super.connect(signer) as RandomizerClean__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RandomizerClean {
    return new Contract(address, _abi, signerOrProvider) as RandomizerClean;
  }
}

const _abi = [
  {
    inputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    constant: true,
    inputs: [],
    name: "daiContract",
    outputs: [
      {
        internalType: "contract DAI",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "returnHashStringClean",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b031916735592ec0cfb4dbc12d3ab100b257153436a1f0fea17905561014e806100466000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632ce8b9131461003b578063fcc300e41461005f575b600080fd5b610043610079565b604080516001600160a01b039092168252519081900360200190f35b610067610088565b60408051918252519081900360200190f35b6000546001600160a01b031681565b60008054604080516370a0823160e01b8152739f885908bf9df0d083245ac34f39a28b493136be600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156100e857600080fd5b505afa1580156100fc573d6000803e3d6000fd5b505050506040513d602081101561011257600080fd5b505190509056fea265627a7a723158205c90fa2da98d3c1c2d6f95dcc23f7aea14a4dd89acdde6c65e8a47718d2fcd6364736f6c63430005110032";
